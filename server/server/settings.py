"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
import environ
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
ROOT_DIR = environ.Path(__file__) - 3
API_DIR = ROOT_DIR.path('server')
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Load OS environment variables

env = environ.Env()
DJANGO_ENV = env.str('DJANGO_ENV', default='development')

# Loading .env file from root directory to set environment.
# OS Environment variables have precedence over variables defined in the .env file

env_file = ROOT_DIR('.env')
env.read_env(env_file)

if DJANGO_ENV == 'development':
    # SECURITY WARNING: don't run with debug turned on in production!
    # https://docs.djangoproject.com/en/3.0/ref/settings/#std:setting-DEBUG

    DEBUG = True

# https://docs.djangoproject.com/en/3.0/ref/settings/#secret-key

SECRET_KEY = env.str('DJANGO_SECRET_KEY')

# Hosts/domain names that are valid for this site
# https://docs.djangoproject.com/en/3.0/ref/settings/#allowed-hosts

ALLOWED_HOSTS = env.list('DJANGO_ALLOWED_HOSTS', default=[])
USE_X_FORWARDED_HOST = env.bool('DJANGO_USE_X_FORWARDED_HOST', default=True)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    ## custom apps
    'django.contrib.postgres',
    'corsheaders',
    'django_filters',
    'django_extensions',
    'rest_framework',
    'rest_framework.authtoken',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # custom middleware
    'corsheaders.middleware.CorsMiddleware',
]

CORS_ALLOWED_ORIGINS = ["http://localhost:3000"]

ROOT_URLCONF = 'server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'

# Rest Framework Settings
# http://www.django-rest-framework.org/api-guide/settings/

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ]
}


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env.str('DATABASE_NAME'),
        'USER': env.str('DATABASE_OWNER'),
        'PASSWORD': env.str('DATABASE_PASSWORD'),
        'HOST': env.str('DATABASE_HOST', default='localhost'),
        'PORT': env.int('DATABASE_PORT', default=5432),
        'CONN_MAX_AGE': env.int('DATABASE_CONN_MAX_AGE', default=0)
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Authentication Backends to use

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en'
LOCALE_PATHS = [
    API_DIR('locale'),
    API_DIR('contrib/rest_framework/locale'),
    API_DIR('contrib/auth/locale'),
    API_DIR('contrib/conf/locale'),
]
USE_I18N = True
USE_L10N = True

# Timezone settings
# https://docs.djangoproject.com/en/3.0/topics/i18n/timezones/

TIME_ZONE = env.str('DEFAULT_TIME_ZONE', default='UTC')
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = API_DIR('static')
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    API_DIR('assets'),
]

# User uploaded media files
# https://docs.djangoproject.com/en/3.0/topics/files/

MEDIA_ROOT = API_DIR('media')
MEDIA_URL = '/media/'

# Site Specific Settings

DOMAIN = env.str('DOMAIN', default='localhost:3000')
SITE_NAME = _(env.str('SITE_NAME'))
SITE_OWNER_NAME = _(env.str('SITE_OWNER_NAME'))
ADMIN_SITE_HEADER = env.str('ADMIN_SITE_HEADER')
API_BROWSER_HEADER = env.str('API_BROWSER_HEADER')

# Exported settings available in templates
# https://github.com/jakubroztocil/django-settings-export

SETTINGS_EXPORT = [
    'DOMAIN',
    'SITE_NAME',
    'ADMIN_SITE_HEADER',
    'API_BROWSER_HEADER',
]

AUTH_USER_MODEL = 'users.User'
